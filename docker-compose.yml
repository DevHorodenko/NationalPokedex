services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/pokedex
      - SPRING_DATASOURCE_USERNAME=pokedex_user
      - SPRING_DATASOURCE_PASSWORD=pokedex_password
      - JWT_SECRET=8Zz5tw0Ionm3XPZZfN0NOml3z9FMfmpgXwovR9fp6ryDIoGRM8EPHAB6iHsc0fb8Zz5tw0Ionm3XPZZfN0NOml3z9FMfmpgXwovR9fp6ryDIoGRM8EPHAB6iHsc0fb
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pokedex-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pokedex
      - POSTGRES_USER=pokedex_user
      - POSTGRES_PASSWORD=pokedex_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pokedex-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pokedex_user -d pokedex"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@nationalpokedex.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - pokedex-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  pokedex-network:
    driver: bridge 